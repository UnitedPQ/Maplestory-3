// Generated by CoffeeScript 1.8.0
var vivoSlide;

vivoSlide = (function() {
  function vivoSlide(obj, o) {
    this.obj = obj;
    this.o = $.extend({
      autoStart: true,
      slideTime: 300,
      changeTime: 2500,
      overStop: true,
      listObj: '.slide-list',
      thumbObj: '.slide-thumb',
      nextBtn: '.slide-next',
      prevBtn: '.slide-prev'
    }, o || {});
    this.listObj = this.obj.find(this.o.listObj);
    this.thumbObj = this.obj.find(this.o.thumbObj);
    this.nextBtn = this.obj.find(this.o.nextBtn);
    this.prevBtn = this.obj.find(this.o.prevBtn);
    this.size = this.listObj.children().size();
    this.width = this.listObj.children().width();
    this.height = this.listObj.children().height();
    this.nowIndex = 1;
    this.index = 1;
    this.autoRun = null;
  }

  vivoSlide.prototype.slideIt = function(idx) {
    var nextIndex;
    if (idx === 'next') {
      nextIndex = this.nowIndex + 1;
    } else if (idx === 'prev') {
      nextIndex = this.nowIndex - 1;
    } else {
      nextIndex = idx >= 1 && idx <= this.size ? idx : this.nowIndex;
    }
    return this.listObj.animate({
      'margin-left': -1 * this.width * nextIndex + 'px'
    }, this.o.slideTime, (function(_this) {
      return function() {
        if (nextIndex === 0) {
          nextIndex = _this.size;
        } else if (nextIndex === _this.size + 1) {
          nextIndex = 1;
        }
        _this.nowIndex = nextIndex;
        _this.listObj.css({
          'margin-left': -1 * _this.width * _this.nowIndex + 'px'
        });
        return _this.thumbObj.children().removeClass('active').eq(_this.nowIndex - 1).addClass('active');
      };
    })(this));
  };

  vivoSlide.prototype.init = function() {
    var firstItem, lastItem, that;
    firstItem = this.listObj.children().first().clone();
    lastItem = this.listObj.children().last().clone();
    this.listObj.append(firstItem).prepend(lastItem);
    this.listObj.width(this.width * (this.size + 2)).css({
      'margin-left': -1 * this.width * this.nowIndex + 'px'
    });
    this.listObj.children().width(this.width).height(this.height);
    if (this.nextBtn) {
      this.nextBtn.click((function(_this) {
        return function() {
          _this.slideIt('next');
          return false;
        };
      })(this));
    }
    if (this.prevBtn) {
      this.prevBtn.click((function(_this) {
        return function() {
          _this.slideIt('prev');
          return false;
        };
      })(this));
    }
    if (this.thumbObj) {
      that = this;
      this.thumbObj.children().click(function() {
        var index;
        index = $(this).index();
        return that.slideIt(index + 1);
      });
    }
    if (this.o.autoStart) {
      this.autoRun = setInterval((function(_this) {
        return function() {
          return _this.slideIt('next');
        };
      })(this), this.o.changeTime - parseInt(300 * Math.random()));
      if (this.o.overStop) {
        this.obj.hover((function(_this) {
          return function() {
            return clearInterval(_this.autoRun);
          };
        })(this), (function(_this) {
          return function() {
            return _this.autoRun = setInterval(function() {
              return _this.slideIt('next');
            }, _this.o.changeTime - parseInt(300 * Math.random()));
          };
        })(this));
      }
    }
    return this;
  };

  return vivoSlide;

})();

$.fn.slide = function(o) {
  return this.each(function() {
    var slideObj;
    slideObj = new vivoSlide($(this), o);
    return slideObj.init();
  });
};
